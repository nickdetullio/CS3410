In our presentation we had only implemented a single core Honeypot. Due to issues with our mutex we could not utilize concurrency so we had just one core dedicated to polling. Since then we have successfully implemented a mutex class and thus have been able to utilize concurrency in our Honeypot. With the LL and SC commands, atomic instructions have made printing and accessing our shared data structures thread safe. The distribution of the cores is as such: Core 0 is dedicated to network polling, and the rest of the cores are responsible for handling packets. When a packet is received, it is placed in a queue and the network statistics are updated. The handle_packet method then pulls a packet from the queue and analyzes it. We've also created an interactive user interface whereby pressing the 's' key causes the statistics to print.